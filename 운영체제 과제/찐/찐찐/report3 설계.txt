기본적으로 뱅커 알고리즘에서 가장 중요한 발상은

available이 수용할수 있는 need의 값을 찾는 것이다. 

우선 전체 프로세스의 need 와 available을 순회적으로 비교하는 것이 가장 중요하다고 생각한다. 
비교를 하면서 각각의 available 인자와 need 인자중 하나라도 need>available보다 크면 바로 다음 프로세스를 비교한다. 

만약 이 조건에 부합하는 것이 없는 시점이 오면 이 프로세스는 unsafe하다고 볼수 있다. 

need < available 한 프로세스를 찾으면
이는 마치 은행에서 돈을 빌려서 해당 need를 충당한것 과 같다. 

따라서 이때 충당했다는 의미로 available 값에 완료한 need가 있는 프로세스의 allocation을 더해줘야 한다. 

이때의 available은 완료한 프로세스의 allocation값을 받았음으로 이전보다 더 큰값을 갖고 있다. 

이 상태에서 위와 같은 현재 남아있는 프로세스에서 avail보다 작은 need를 찾고 다시 그 allo을 더해주는 방식을 반복한다. 