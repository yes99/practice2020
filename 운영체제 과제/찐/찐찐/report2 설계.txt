우선 스케줄링은 각각의 스케줄링의 기본 원리를 이해하는 것이 가장 중요하다. 
또한 과제에서는 최단시간 우선과,  우선순위 스케줄링은 선점형으로 작성하라고 했기에 시간과 관련된 인자를 잘 다뤄야 한다고 생각한다.
라운드 로빈 같은경우에는 구현 자체가 선점형이기에 이는 별개의 문제로 생각한다. 

선입선출

선입선출은 먼저 들어온것을 먼저 실행하고, 그후 차례데로 프로세스가 도착한 시간대로 진행하는 것이다. 
우선은 요소들을 정리하여 도착시간을 기준으로 오름차순으로 정리하는 것이 가장 중요하다. 
오름차순으로 프로세스를 정리한 뒤 각각 버스트 타임을 더한 것을 컴플릿 타음으로 정하고, 
기존에 주어진 값들을 통해서 도출값을 정리한다. 
 
최단시간

우선 시간을 의미하는 정수를 선언하고, 그리고 반복문에서 0부터 모든 프로세스가 끝날때 까지 진행하게 한다. 
각각 시간마다, 프로세스가 들어오는 arrive time이랑 비교해서, 만약 새로운 프로세스가 들어오지 않았으면 기존 프로세스를 진행하고
새로운 프로세스가 들어오면 기존의 프로세스와 지금 진행중인 프로세스의 남은 시간과 비교하여 무엇을 진행할지를 확인한다. 
그 뒤 잔여시간이 더 짧은 것을 진행하면서, 각각 시간마다 들어오는 arr 타임 그리고, 하나의 프로세스가 끝나면 그 다음으로 짧은 시간을 갖고있는 프로세스를 진행한다. 

우선순위 
위와 이하동문이다 .

라운드 로빈

라운드 로빈은 그때 그대 퀀텀타임마다 진행하는 프로세스가 바뀌어야 한다. 
우선은 시간의 정수를 정하고 이것이 진행시킨다.
위와 같이 도착시간을 계산하여 라운드 로빈으로 진행할 큐에 새로운 프로세스가 추가 되게 한다. 


하나의 배열에 각각의 프로세스의 버스트 타임을 저장하고
시간이 한번 흐를때 하나의 프로세서에서 퀀텀이 빠지면 그 다음 배열로 넘어가서 퀀텀이 빠지는 식으로 진행해야 한다.

예외 사항으로 리메인 타임이 퀀텀 보다 작을경우도 고려해 주고, 이럴경우에는 나머지 리메인 타임을 다 쓰고 다음 프로세스로 넘어가게 한다. 
